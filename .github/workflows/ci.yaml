name: CI Pipeline

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
  workflow_dispatch:

env:
  NODE_VERSION: 'lts/*'
  PYTHON_VERSION: '3.13'

jobs:
  eslint:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-          

      - name: Install ESLint
        run: npm install

      - name: Run ESLint
        run: npm run lint

  commitlint:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-  

      - name: Install commitlint
        run: npm install --save-dev @commitlint/{config-conventional,cli}

      - name: Run commitlint
        run: git log -1 --pretty=%B | npx commitlint


  lint:
    runs-on: ubuntu-24.04
    container:
      image: python:3.12

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create virtual environment
        run: |
          python3 -m venv venv
        shell: bash

      - name: Install Dependencies
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install flit
          pip install invoke
          FLIT_ROOT_INSTALL=1 invoke install
        shell: bash

      - name: Validate Complexity
        run: |
          source venv/bin/activate
          invoke check-complexity --max-complexity 12
        shell: bash

      - name: Run lint checks
        run: |
          source venv/bin/activate
          invoke lint
        shell: bash

  test:
    runs-on: ubuntu-24.04
    needs:
      - eslint
      - commitlint
      - lint

    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.12', '3.13']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create virtual environment
        run: |
          python3 -m venv venv
        shell: bash

      - name: Install Python Dependencies
        run: |
          source venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install flit invoke
          invoke install
        shell: bash

      - name: Run tests
        run: |
          source venv/bin/activate
          invoke test
        shell: bash
